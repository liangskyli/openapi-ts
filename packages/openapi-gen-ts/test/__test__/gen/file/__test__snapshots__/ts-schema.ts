/**
 * This file was auto-generated by @liangskyli/openapi-gen-ts.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/root/v4/getQueryParams1-v4': {
    get: {
      parameters: {
        query: {
          /** @description activityBases */
          activityBases: components['schemas']['ActivityBase'][];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'text/plain': string;
          };
        };
      };
    };
  };
  '/root/v4/getNoQueryParams-v4': {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            'text/plain': string;
          };
        };
      };
    };
  };
  '/root/v4/postBody1-v4': {
    post: {
      parameters: {
        query: {
          queryParam1: number;
        };
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['proto.LockRequest'];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'text/plain': string;
          };
        };
      };
    };
  };
  '/root/v4/postBody2-v4': {
    post: {
      parameters: {
        query: {
          /** @description activityBases */
          activityBases: components['schemas']['ActivityBase'][];
        };
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['proto.LockRequest'];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'text/plain': string;
          };
        };
      };
    };
  };
  '/root/v4/getQueryParams2-v4/{id}': {
    head: {
      parameters: {
        query: {
          /** @description activityBases */
          activityBases: components['schemas']['ActivityBase'][];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'text/plain': string;
          };
        };
      };
    };
  };
  '/root/v4/getQueryParams3-v4': {
    patch: {
      parameters: {
        query: {
          /** @description activityBases */
          activityBases: components['schemas']['ActivityBase'][];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'text/plain': string;
          };
        };
      };
    };
  };
  '/root/v4/file': {
    post: {
      requestBody: {
        content: {
          'multipart/form-data': {
            /** Format: binary */
            fileName: string;
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'text/plain': string;
          };
        };
      };
    };
  };
  '/root/v4/files': {
    post: {
      requestBody: {
        content: {
          'multipart/form-data': {
            fileNames: string[];
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'text/plain': string;
          };
        };
      };
    };
  };
  '/root/v4/Put': {
    put: {
      parameters: {
        query: {
          /** @description activityBases */
          activityBases: components['schemas']['ActivityBase'][];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'text/plain': string;
          };
        };
      };
    };
  };
  '/root/v4/Delete': {
    delete: {
      parameters: {
        query: {
          /** @description activityBases */
          activityBases: components['schemas']['ActivityBase'][];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'text/plain': string;
          };
        };
      };
    };
  };
  '/root/getQueryParams1-v3': {
    get: {
      parameters: {
        query: {
          /** @description activityBases */
          activityBases: components['schemas']['ActivityBase'][];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'application/json': {
              /** @description 接口返回code码字段 */
              code: number;
              data: {
                a3: string;
                b: components['schemas']['commonResponse2'];
              };
              /** @description 接口返回信息字段 */
              msg?: string;
            };
          };
        };
      };
    };
  };
  '/root/getQueryParam-v3/{id}': {
    get: {
      parameters: {
        query: {
          queryParam1: number;
          queryParam2: string | number;
          queryParam3?: number[];
          queryParam4: (string | number)[];
          queryParam5: (number | boolean)[];
          queryParam6: unknown;
          queryParam7: unknown;
          queryParam8?: components['schemas']['IParam2'];
          queryParam9?: {
            a: string;
            b: string;
          };
          queryParam10?: ('1' | '2' | 3) | true;
          queryParam11?: ('1' | '2' | 3) | boolean;
          queryParam12?: ('1' | '2' | 3) | boolean;
          queryParam13?: boolean;
          queryParam14?: boolean;
          queryParam15?: [
            components['schemas']['IParam2'],
            number,
            components['schemas']['getQueryParams1Request'],
          ][];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'application/json': {
              /** @description 接口返回code码字段 */
              code: number;
              data: {
                a33: string;
              };
              /** @description 接口返回信息字段 */
              msg?: string;
            };
          };
        };
      };
    };
  };
  '/root/postBody1-v3': {
    post: {
      requestBody: {
        content: {
          'application/json': components['schemas']['proto.LockRequest'];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'application/json': {
              /** @description 接口返回code码字段 */
              code: number;
              data: string;
              /** @description 接口返回信息字段 */
              msg?: string;
            };
          };
        };
      };
    };
  };
  '/root/v2/getQueryParams1-v2': {
    get: {
      parameters: {
        query: {
          /** @description activityBases */
          activityBases: components['schemas']['ActivityBase'][];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'application/json': {
              /** @description 接口返回code码字段 */
              code: number;
              data: {
                a: string;
              };
              /** @description 接口返回信息字段 */
              msg?: string;
            };
          };
        };
      };
    };
  };
  '/root/v2/getQueryParam-v2/{id}': {
    get: {
      parameters: {
        query: {
          queryParam1: number;
          queryParam2: string | number;
          queryParam3: number[];
          queryParam4: (string | number)[];
          queryParam5: (string | number)[];
          queryParam6: unknown;
          queryParam7: unknown;
          queryParam8: components['schemas']['IParam2'];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'application/json': {
              /** @description 接口返回code码字段 */
              code: number;
              data: {
                a: string;
              };
              /** @description 接口返回信息字段 */
              msg?: string;
            };
          };
        };
      };
    };
  };
  '/root/v1/getQueryParams1': {
    get: {
      parameters: {
        query: {
          /** @description activityBases */
          activityBases: components['schemas']['ActivityBase'][];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'application/json': {
              /** @description 接口返回code码字段 */
              code: number;
              data: {
                a: string;
              };
              /** @description 接口返回信息字段 */
              msg?: string;
            };
          };
        };
      };
    };
  };
  '/root/v1/getQueryParams2': {
    get: {
      parameters: {
        query: {
          inlineQueryParam1: string;
          inlineQueryParam2: string | number;
          inlineQueryParam3: unknown;
          inlineQueryParam4: null;
          inlineQueryParam5: [string, boolean];
          inlineQueryParam6: [string, boolean][];
          inlineQueryParam7: [[string, boolean], number][];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'application/json': {
              /** @description 接口返回code码字段 */
              code: number;
              data: {
                a: string;
              };
              /** @description 接口返回信息字段 */
              msg?: string;
            };
          };
        };
      };
    };
  };
  '/root/v1/getQueryParam': {
    /** getQueryParam */
    get: {
      parameters: {
        query: {
          queryParam1: components['schemas']['IParam1'];
          queryParam2: components['schemas']['IParam2'];
          queryParam3: components['schemas']['IParam3'];
          queryParam4: components['schemas']['IParam4'];
          queryParam5: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'application/json': {
              /** @description 接口返回code码字段 */
              code: number;
              data: {
                a: string;
              };
              /** @description 接口返回信息字段 */
              msg?: string;
            };
          };
        };
      };
    };
  };
  '/root/v1/getQueryParamWithQueryParams': {
    get: {
      parameters: {
        query: {
          queryParam1: components['schemas']['IParam1'];
          queryParam2: components['schemas']['IParam2'];
          /** @description activityBases */
          activityBases: components['schemas']['ActivityBase'][];
        };
        path: {
          param1: string;
          param2: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'application/json': {
              /** @description 接口返回code码字段 */
              code: number;
              data: components['schemas']['Response1'];
              /** @description 接口返回信息字段 */
              msg?: string;
            };
          };
        };
      };
    };
  };
  '/root/v1/getParam': {
    get: {
      parameters: {
        header: {
          orgcode1: string;
          orgcode2: components['schemas']['IParam3'];
        };
        path: {
          param1: components['schemas']['IParam1'];
          param2: components['schemas']['IParam2'];
          param3: components['schemas']['IParam3'];
          param4: components['schemas']['IParam4'];
          param5: number;
          param6: components['schemas']['getUserRequest'];
        };
        cookie: {
          cookie1: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'application/json': {
              /** @description 接口返回code码字段 */
              code: number;
              data: {
                a: string;
              };
              /** @description 接口返回信息字段 */
              msg?: string;
            };
          };
        };
      };
    };
  };
  '/root/v1/getQueryParamWithParam': {
    get: {
      parameters: {
        query: {
          queryParam1: components['schemas']['IParam1'];
          queryParam2: components['schemas']['IParam2'];
        };
        path: {
          param1: components['schemas']['IParam1'];
          param2: components['schemas']['IParam2'];
          param3: components['schemas']['IParam3'];
          param4: components['schemas']['IParam4'];
          param5: number;
          param6: components['schemas']['getUserRequest'];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'application/json': {
              /** @description 接口返回code码字段 */
              code: number;
              data: components['schemas']['Response1'];
              /** @description 接口返回信息字段 */
              msg?: string;
            };
          };
        };
      };
    };
  };
  '/root/v1/postBody1': {
    post: {
      parameters: {
        query: {
          queryParam1: components['schemas']['IParam1'];
        };
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['postBody1'];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'application/json': {
              /** @description 接口返回code码字段 */
              code: number;
              data: {
                a: string;
              };
              /** @description 接口返回信息字段 */
              msg?: string;
            };
          };
        };
      };
    };
  };
  '/root/v1/postBody2': {
    post: {
      requestBody: {
        content: {
          'application/json': components['schemas']['IParam2'];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'application/json': {
              /** @description 接口返回code码字段 */
              code: number;
              data: {
                a: string;
              };
              /** @description 接口返回信息字段 */
              msg?: string;
            };
          };
        };
      };
    };
  };
  '/root/v1/postBody3': {
    post: {
      requestBody: {
        content: {
          'application/json': components['schemas']['IParam3'];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'application/json': {
              /** @description 接口返回code码字段 */
              code: number;
              data: {
                a: string;
              };
              /** @description 接口返回信息字段 */
              msg?: string;
            };
          };
        };
      };
    };
  };
  '/root/v1/postBody4': {
    post: {
      requestBody: {
        content: {
          'application/json': components['schemas']['getQueryParams1Request'];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'application/json': {
              /** @description 接口返回code码字段 */
              code: number;
              data:
                | {
                    a: string;
                  }
                | components['schemas']['Response1'];
              /** @description 接口返回信息字段 */
              msg?: string;
            };
          };
        };
      };
    };
  };
  '/root/v1/postBody5': {
    post: {
      requestBody: {
        content: {
          'application/json': {
            inlineBody1: string;
            inlineBody2?: number;
          };
          'multipart/form-data': {
            /** Format: binary */
            fileName: string;
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'application/json': {
              /** @description 接口返回code码字段 */
              code: number;
              data:
                | {
                    a: string;
                  }
                | components['schemas']['Response1'];
              /** @description 接口返回信息字段 */
              msg?: string;
            };
          };
        };
      };
    };
  };
  '/root/v1/postBodyParam': {
    post: {
      requestBody: {
        content: {
          'application/json': {
            BodyParam1: components['schemas']['BodyParam1'];
            BodyParam2: components['schemas']['IParam2'];
            BodyParam3: components['schemas']['IParam3'];
            BodyParam4: components['schemas']['IParam4'];
            BodyParam5: number;
            BodyParam6: components['schemas']['getUserRequest'];
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            'application/json': {
              /** @description 接口返回code码字段 */
              code: number;
              data: {
                a: string;
              } & components['schemas']['Response1'];
              /** @description 接口返回信息字段 */
              msg?: string;
            };
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    getQueryParams1Request: {
      /** @description activityBases */
      activityBases: components['schemas']['ActivityBase'][];
    };
    ActivityBase: {
      /** @description 活动id(对应原有字段chooseRoomActivityId) */
      activityId: number;
      /** @description 活动名称 */
      activityName: string;
    } & {
      /** @description 活动下的用户数量 */
      customerCount: number;
      /** @description 活动下的房源数量 */
      roomCount?: number;
      /** @description 摇号同步数据-是否有异常 */
      isException?: boolean;
    };
    'proto.LockRequest': {
      /** @description 房间id */
      roomId: number;
    };
    commonResponse2: {
      /** @description 多行注释 */
      param1: number;
    };
    IParam2: {
      /** @description 单行注释 */
      param1: string;
      param2: null;
    };
    IParam1: {
      /** @description 多行注释 */
      param1: number;
    };
    IParam3: {
      param1: {
        a: string;
      } & {
        b: boolean;
        c: {
          a: number;
        };
      };
      param2_1: string | number;
      param2:
        | components['schemas']['Partial<Pick<IUser,"id">>']
        | (string | number);
      /** @enum {string} */
      param3: '1' | '2' | '3';
      /** @enum {unknown} */
      param4: '1' | '2' | 3 | true;
      param5:
        | {
            /** @description 单行注释 */
            param1: string;
            param2: null;
          }
        | ('1' | '2' | 3);
    };
    'Partial<Pick<IUser,"id">>': {
      id?: number;
    };
    IParam4: {
      /** @description param1 minLength 1 */
      param1: string;
      param2: components['schemas']['Required<ActivityBase>'] | string;
      param3: components['schemas']['Required<Pick<IUser,"name">>'];
    };
    'Required<ActivityBase>': {
      /** @description 活动id(对应原有字段chooseRoomActivityId) */
      activityId: number;
      /** @description 活动名称 */
      activityName: string;
      /** @description 活动下的用户数量 */
      customerCount: number;
      /** @description 活动下的房源数量 */
      roomCount: number;
      /** @description 摇号同步数据-是否有异常 */
      isException: boolean;
    };
    'Required<Pick<IUser,"name">>': {
      name: string;
    };
    Response1: {
      activityBases2: {
        /** @description 活动id(对应原有字段chooseRoomActivityId) */
        activityId: number;
        /** @description 活动名称 */
        activityName: string;
      } & {
        /** @description 活动下的用户数量 */
        customerCount: number;
        /** @description 活动下的房源数量 */
        roomCount?: number;
        /** @description 摇号同步数据-是否有异常 */
        isException?: boolean;
      } & {
        activityBases2Other: {
          a: string;
        };
      };
    };
    getUserRequest: {
      /** @description a any */
      a: unknown;
      b: string;
      c: {
        d?: string;
      };
      user: components['schemas']['userWithList'];
    };
    userWithList: {
      list: {
        id: string;
        name: string;
        pics: string[];
      }[];
    };
    postBody1: {
      postBody1param1: string;
      tow: components['schemas']['Partial<postBody11>'][];
    };
    'Partial<postBody11>': {
      postBody1param11?: string;
    };
    BodyParam1: {
      BodyParam1: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
